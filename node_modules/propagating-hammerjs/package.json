{
  "_args": [
    [
      {
        "raw": "propagating-hammerjs@^1.4.6",
        "scope": null,
        "escapedName": "propagating-hammerjs",
        "name": "propagating-hammerjs",
        "rawSpec": "^1.4.6",
        "spec": ">=1.4.6 <2.0.0",
        "type": "range"
      },
      "C:\\Users\\ziadh\\WebstormProjects\\SignalFlowSolver\\node_modules\\vis"
    ]
  ],
  "_from": "propagating-hammerjs@>=1.4.6 <2.0.0",
  "_id": "propagating-hammerjs@1.4.6",
  "_inCache": true,
  "_location": "/propagating-hammerjs",
  "_nodeVersion": "5.7.1",
  "_npmOperationalInternal": {
    "host": "packages-12-west.internal.npmjs.com",
    "tmp": "tmp/propagating-hammerjs-1.4.6.tgz_1457169834503_0.6200259372126311"
  },
  "_npmUser": {
    "name": "josdejong",
    "email": "wjosdejong@gmail.com"
  },
  "_npmVersion": "3.6.0",
  "_phantomChildren": {},
  "_requested": {
    "raw": "propagating-hammerjs@^1.4.6",
    "scope": null,
    "escapedName": "propagating-hammerjs",
    "name": "propagating-hammerjs",
    "rawSpec": "^1.4.6",
    "spec": ">=1.4.6 <2.0.0",
    "type": "range"
  },
  "_requiredBy": [
    "/vis"
  ],
  "_resolved": "https://registry.npmjs.org/propagating-hammerjs/-/propagating-hammerjs-1.4.6.tgz",
  "_shasum": "fed00e9b00767ffd42d14f5b531bc493eb672e37",
  "_shrinkwrap": null,
  "_spec": "propagating-hammerjs@^1.4.6",
  "_where": "C:\\Users\\ziadh\\WebstormProjects\\SignalFlowSolver\\node_modules\\vis",
  "author": {
    "name": "Jos de Jong"
  },
  "bugs": {
    "url": "https://github.com/josdejong/propagating-hammerjs/issues"
  },
  "dependencies": {
    "hammerjs": "^2.0.6"
  },
  "description": "Extend hammer.js with event propagation",
  "devDependencies": {},
  "directories": {},
  "dist": {
    "shasum": "fed00e9b00767ffd42d14f5b531bc493eb672e37",
    "tarball": "https://registry.npmjs.org/propagating-hammerjs/-/propagating-hammerjs-1.4.6.tgz"
  },
  "gitHead": "c85b62ac18851ad3f73b2cc429aaed9d17406d06",
  "homepage": "https://github.com/josdejong/propagating-hammerjs",
  "keywords": [
    "hammerjs",
    "touch",
    "gestures",
    "event",
    "propagation"
  ],
  "license": "MIT",
  "main": "propagating.js",
  "maintainers": [
    {
      "name": "josdejong",
      "email": "wjosdejong@gmail.com"
    }
  ],
  "name": "propagating-hammerjs",
  "optionalDependencies": {},
  "readme": "propagating-hammerjs\n====================\n\nExtend hammer.js v2 with event propagation.\n\n# Features\n\n- Events emitted by hammer will propagate in order from child to parent\n  elements.\n- Events are extended with a function `event.stopPropagation()` to stop\n  propagation to parent elements.\n- Events are extended with a property `event.firstTarget` containing the\n  element where a gesture started.\n- Supports changing and rearranging the HTML DOM on the fly.\n- Load via commonjs, AMD, or as a plain old JavaScript file.\n\n\n# Install\n\n    npm install propagating-hammerjs\n\n# Load\n\n## Browser\n\n```html\n<!DOCTYPE html>\n<html>\n<head>\n  <script src=\"node_modules/hammerjs/hammer.js\"></script>\n  <script src=\"propagating.js\"></script>\n  <script>\n    function init() {\n      var hammer = propagating(new Hammer(element));\n    }\n  </script>\n</head>\n<body>\n</body>\n</html>\n```\n\n## Commonjs (Node.js + Browserify)\n\n```js\nvar Hammer = require('hammerjs');\nvar propagating = require('propagating-hammerjs');\n\nfunction init() {\n  var hammer = propagating(new Hammer(element));\n}\n```\n\n\n# Use\n\nTo extend individual hammer.js instances with event propagation:\n\n```js\nvar hammer = propagating(new Hammer(element));\n```\n\nTo extend the global hammer.js constructor\n\n```js\nHammer = propagating(Hammer);\n```\n\n# Examples\n\nHere a basic usage example.\nMore examples are available in the folder [/examples](./examples/).\n\n\n```html\n<!DOCTYPE html>\n<html>\n<head>\n  <script src=\"node_modules/hammerjs/hammer.js\"></script>\n  <script src=\"propagating.js\"></script>\n  <style>\n    div     {border: 1px solid black;}\n    #parent {width: 400px; height: 400px; background: lightgreen;}\n    #child  {width: 200px; height: 200px; background: yellow; margin: 10px;}\n  </style>\n</head>\n<body>\n\n<div id=\"parent\">\n  parent\n  <div id=\"child\">\n    child\n  </div>\n</div>\n\n<script>\n  var parent = document.getElementById('parent');\n  var hammer1 = propagating(new Hammer(parent))\n      .on('tap', function (event) {\n        alert('tap on parent');\n      });\n\n  var child = document.getElementById('child');\n  var hammer2 = propagating(new Hammer(child))\n      .on('tap', function (event) {\n        alert('tap on child');\n\n        // stop propagation from child to parent\n        event.stopPropagation();\n      });\n</script>\n</body>\n</html>\n```\n\n# API\n\nConstruction:\n\n    propagating(hammer: Hammer.Manager [, options: Object]) : Hammer.Manager\n\n**parameters**\n\n- `hammer: Hammer.Manager` An hammer instance or the global hammer constructor.\n\n- `options: Object` An optional object with options. Available options:\n\n  - `preventDefault: true | 'mouse' | 'touch' | 'pen'`. Optional. \n    Enforce preventing the default browser behavior. Cannot be set to `false`.\n\n**returns**\n\nReturns the same hammer instance with extended functionality.\n\n**events**\n\nThe emitted [hammer.js events](http://hammerjs.github.io/api/#event-object) are\nextended with:\n\n-   `event.stopPropagation()`\n\n    If called, the event will not further propagate the elements parents.\n\n-   `event.firstTarget`\n\n    Contains the HTML element where a gesture started (where as `event.target`\n    contains the element where the pointer is right now).\n\n\n# License\n\nMIT\n",
  "readmeFilename": "README.md",
  "repository": {
    "type": "git",
    "url": "git+https://github.com/josdejong/propagating-hammerjs.git"
  },
  "scripts": {
    "test": "echo \"Error: no test specified\" && exit 1"
  },
  "version": "1.4.6"
}
