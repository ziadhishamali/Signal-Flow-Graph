{
  "_args": [
    [
      {
        "raw": "keycharm@^0.2.0",
        "scope": null,
        "escapedName": "keycharm",
        "name": "keycharm",
        "rawSpec": "^0.2.0",
        "spec": ">=0.2.0 <0.3.0",
        "type": "range"
      },
      "C:\\Users\\ziadh\\WebstormProjects\\SignalFlowSolver\\node_modules\\vis"
    ]
  ],
  "_from": "keycharm@>=0.2.0 <0.3.0",
  "_id": "keycharm@0.2.0",
  "_inCache": true,
  "_location": "/keycharm",
  "_npmUser": {
    "name": "alexdm0",
    "email": "alex@almende.org"
  },
  "_npmVersion": "1.4.14",
  "_phantomChildren": {},
  "_requested": {
    "raw": "keycharm@^0.2.0",
    "scope": null,
    "escapedName": "keycharm",
    "name": "keycharm",
    "rawSpec": "^0.2.0",
    "spec": ">=0.2.0 <0.3.0",
    "type": "range"
  },
  "_requiredBy": [
    "/vis"
  ],
  "_resolved": "https://registry.npmjs.org/keycharm/-/keycharm-0.2.0.tgz",
  "_shasum": "fa6ea2e43b90a68028843d27f2075d35a8c3e6f9",
  "_shrinkwrap": null,
  "_spec": "keycharm@^0.2.0",
  "_where": "C:\\Users\\ziadh\\WebstormProjects\\SignalFlowSolver\\node_modules\\vis",
  "author": {
    "name": "Alex de Mulder",
    "email": "alex almende org"
  },
  "bugs": {
    "url": "https://github.com/AlexDM0/keycharm/issues"
  },
  "dependencies": {},
  "description": "Simple, lightweight key-binding lib",
  "devDependencies": {},
  "directories": {},
  "dist": {
    "shasum": "fa6ea2e43b90a68028843d27f2075d35a8c3e6f9",
    "tarball": "https://registry.npmjs.org/keycharm/-/keycharm-0.2.0.tgz"
  },
  "gitHead": "68636b4d34d48ba72d87bc2b63b9e87d4fd090d4",
  "homepage": "https://github.com/AlexDM0/keycharm#readme",
  "main": "keycharm.js",
  "maintainers": [
    {
      "name": "alexdm0",
      "email": "alex@almende.org"
    }
  ],
  "name": "keycharm",
  "optionalDependencies": {},
  "readme": "keycharm\r\n========\r\n\r\nEasy and free library for binding keys.\r\n\r\nKeycharm is on npm so you can install it with:\r\n```\r\nnpm install keycharm\r\n```\r\n\r\n\r\nExample:\r\n\r\n```\r\nvar keys = keycharm(options);\r\n\r\nkeys.bind(\"a\", function () {}, 'keydown'); // key, callback function, 'keydown' or 'keyup'\r\n```\r\n\r\nAvailable options (all are optional):\r\n```\r\n{\r\n    container: document.getElementById(\"element\"), // optional div to bind keycharm to. It will NEED a tabindex. When not supplied, this defaults to window.\r\n    preventDefault: true/false // default value: false;\r\n}\r\n```\r\n\r\nSupported keys:\r\n\r\n```\r\n'a'-'z', 'A'-'Z', '0'-'9', 'F1'-'F12', 'space', 'enter', 'ctrl', 'alt', 'tab', 'shift', \r\n'delete', 'esc', 'backspace', '-','=', '[', ']', 'left', 'up', 'right', 'down', 'pageup', 'pagedown'\r\n\r\nnumpad: 'num0'-'num9', 'num/', 'num*', 'num-', 'num+', 'num.'\r\n```\r\n\r\nEach initiation of keycharm has its own bindings to the key events.\r\n\r\nAvailable methods:\r\n\r\n```\r\n.bind(key, callback, [type]);               // bind key, type = 'keydown' or 'keyup', default type = keydown.\r\n.unbind(key, [callback], [type]);           // unbind key,  type = 'keydown' or 'keyup', default type = keydown. No callback deletes all bound callbacks from key\r\n.reset();                                   // remove all bound keys\r\n.destroy();                                 // remove all bound keys and the event listeners of keycharm\r\n.getKey(event);                             // get the key label of the event\r\n.bindAll(function, 'keydown' or 'keyup');   // bind all keys to this function, could be used for testing or demos.\r\n```\r\n\r\nKeycharm is Dual-licensed with both the Apache 2.0 license as well as the MIT license. I'll leave it up to the user to pick which one they prefer.",
  "readmeFilename": "README.md",
  "repository": {
    "type": "git",
    "url": "git+https://github.com/AlexDM0/keycharm.git"
  },
  "scripts": {},
  "version": "0.2.0"
}
